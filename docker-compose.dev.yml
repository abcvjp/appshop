version: "3.3"
services:
  proxy:
    depends_on:
      - app
      - admin
      - api
      - worker
      - phpmyadmin
    build: "./proxy"
    ports:
      - 80:80
    networks:
      - frontend
      - backend
    environment:
      - APP_SERVER_NAME=appshop.local
      - APP_SERVER_URI=http://app:3000
      - ADMIN_SERVER_NAME=admin.appshop.local
      - ADMIN_SERVER_URI=http://admin:3000
      - API_SERVER_NAME=api.appshop.local
      - API_SERVER_URI=http://api:5000
      - PHPMYADMIN_SERVER_NAME=db.appshop.local
      - PHPMYADMIN_SERVER_URI=http://phpmyadmin:80
  app:
    build: "./app"
    depends_on:
      - api
    expose:
      - 3000
    volumes:
      - ./app:/app
      - /app/node_modules
    networks:
      - frontend
    environment:
      - NODE_ENV=development
      - REACT_APP_API_BASE=http://api.appshop.local
  admin:
    build: "./admin"
    depends_on:
      - api
    expose:
      - 3000
    ports:
      - 5000:3000
    volumes:
      - ./admin:/admin
      - /admin/node_modules
    networks:
      - frontend
    environment:
      - NODE_ENV=development
      - REACT_APP_API_BASE=http://api.appshop.local
      - REACT_APP_APP_BASE=http://appshop.local
      - REACT_APP_FIREBASE_API_KEY=AIzaSyC_5v8jxbTvEOvF-U90q1ozoRk5ax-VH9c
      - REACT_APP_FIREBASE_AUTH_DOMAIN=appshop-232bf.firebaseapp.com
      - REACT_APP_FIREBASE_PROJECT_ID=appshop-232bf
      - REACT_APP_FIREBASE_STORAGE_BUCKET=appshop-232bf.appspot.com
      - REACT_APP_FIREBASE_MESSAGING_SENDER_ID=1038872571650
      - REACT_APP_FIREBASE_APP_ID=1:1038872571650:web:459f2876102df2344c5c1b
      - REACT_APP_FIREBASE_MEASUREMENT_ID=G-G6M53405TZ
  api:
    depends_on:
      - db
      - redis
      - worker
    build: "./api"
    expose:
      - 5000
    volumes:
      - ./api:/api
      - /api/node_modules
    networks:
      - backend
    env_file:
      - ./api/.env
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DB_HOST=db
      - DB_NAME=appshop_db
      - DB_USERNAME=hoaideptrai
      - DB_PASSWORD=123456
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=123456
      - APP_BASE=http://appshop.local
      - ADMIN_BASE=http://admin.appshop.local
      - JWT_ACCESS_TOKEN_SECRET=Ysg$fG&DG
      - JWT_REFRESH_TOKEN_SECRET=Txlcvkb^32y
      - MAILHOG_HOST=mailhog
      - MAILHOG_PORT=8025
  worker:
    depends_on:
      - redis
    build: "./worker"
    expose:
      - 5000
    volumes:
      - ./worker:/worker
      - /worker/node_modules
    networks:
      - backend
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=123456
      - MAILER_HOST=mailhog
      - MAILER_PORT=1025
      - MAILER_USER=appshop@vippro.com.vn
  db:
    image: mysql:8.0.26
    expose:
      - 3306
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=appshop_db
      - MYSQL_USER=hoaideptrai
      - MYSQL_PASSWORD=123456
    cap_add:
      - CAP_SYS_NICE
  redis:
    image: redis:6.2.5-alpine
    # remember to SET PASSWORD below
    command: "redis-server --requirepass 123456 --maxmemory-policy noeviction"
    expose:
      - 6379
    networks:
      - backend
    environment:
      - REDIS_REPLICATION_MODE=master
  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    networks:
      - backend
    expose:
      - 80
    environment:
      - PMA_HOST=db
      - PMA_PORT=3306
      - PMA_ARBITRARY=1
  # mailhog:
    # depends_on:
      # - api
      # - worker
    # image: mailhog/mailhog
    # logging:
      # driver: "none" # disable saving logs
    # networks:
      # - backend
    # expose:
      # - 1025 # smtp server
    # ports:
      # - 8025:8025 # ui server
  # aws:
    # image: localstack/localstack-light:0.12.18
    # expose:
      # - 4566
    # ports:
      # - 4563-4599:4563-4599
    # volumes:
      # - localstack-data:/tmp/localstack
    # networks:
      # - frontend
    # # command: "aws --endpoint-url=http://localhost:4566 s3 mb s3://webshop" # create webshop bucket
    # environment:
      # - SERVICES=s3 
      # - DEBUG=1
      # - DEFAULT_REGION=us-east-1
      # - AWS_ACCESS_KEY_ID=test
      # - AWS_SECRET_ACCESS_KEY=test
      # # - PORT_WEB_UI=8080
      # # - START_WEB=1
      # - DATA_DIR=/tmp/localstack/data
      # - DOCKER_HOST=unix:///var/run/docker.sock
      # - EXTRA_CORS_ALLOWED_ORIGINS=http://admin.appshop.local
    # volumes:
      # - ./.localstack:/tmp/localstack
      # - /var/run/docker.sock:/var/run/docker.sock
volumes:
  db-data:
networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
